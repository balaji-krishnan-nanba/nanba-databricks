name: Bundle CD - Test

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    environment: 
      name: test
      url: https://databricks-uksouth-test.azuredatabricks.net
    
    steps:
      - name: Manual Approval Required
        run: echo "This deployment requires manual approval from Balaji-Krishnan-Nanba"
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Databricks CLI
        run: |
          pip install databricks-cli
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
            }
      
      - name: Generate Databricks PAT
        id: generate-pat
        run: |
          # Get AAD token
          AAD_TOKEN=$(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d --query accessToken -o tsv)
          
          # Generate Databricks PAT using Token Management API
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $AAD_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "application_id": "'${{ secrets.ARM_CLIENT_ID }}'",
              "lifetime_seconds": 1296000,
              "comment": "GitHub Actions Test Deployment"
            }' \
            https://databricks-uksouth-test.azuredatabricks.net/api/2.0/token-management/on-behalf-of/tokens)
          
          PAT=$(echo $RESPONSE | jq -r '.token_value')
          echo "::add-mask::$PAT"
          echo "pat=$PAT" >> $GITHUB_OUTPUT
      
      - name: Store PAT in GitHub secret
        uses: gliech/create-github-secret-action@v1
        with:
          name: DBX_TOKEN
          value: ${{ steps.generate-pat.outputs.pat }}
          pa_token: ${{ secrets.GH_TOKEN }}
          repository: ${{ github.repository }}
          environment: test
      
      - name: Deploy to Test
        env:
          DATABRICKS_HOST: https://databricks-uksouth-test.azuredatabricks.net
          DATABRICKS_TOKEN: ${{ steps.generate-pat.outputs.pat }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: |
          databricks bundle deploy --target test